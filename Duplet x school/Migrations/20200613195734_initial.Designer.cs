// <auto-generated />
using System;
using Duplet_x_school.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Duplet_x_school.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20200613195734_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Duplet_x_school.Models.Grades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Duplet_x_school.Models.Kabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kabinet");
                });

            modelBuilder.Entity("Duplet_x_school.Models.OptSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OptSubject");
                });

            modelBuilder.Entity("Duplet_x_school.Models.SchoolClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolClass");
                });

            modelBuilder.Entity("Duplet_x_school.Models.SchoolClassKabinetAssignment", b =>
                {
                    b.Property<int>("SchoolClassKabinetAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KabinetId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.HasKey("SchoolClassKabinetAssignmentId");

                    b.HasIndex("KabinetId");

                    b.HasIndex("SchoolClassId")
                        .IsUnique();

                    b.ToTable("SchoolClassKabinetAssignment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.SchoolClassSubjectAssignment", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "SchoolClassId");

                    b.HasIndex("SchoolClassId");

                    b.ToTable("SchoolClassSubjectAssignment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IDCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Duplet_x_school.Models.StudentOptSubjectEnrollment", b =>
                {
                    b.Property<int>("StudentOptSubjectEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OptSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentOptSubjectEnrollmentId");

                    b.HasIndex("OptSubjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentOptSubjectEnrollment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.StudentSchoolClassEnrollment", b =>
                {
                    b.Property<int>("StudentSchoolClassEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentSchoolClassEnrollmentId");

                    b.HasIndex("SchoolClassId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentSchoolClassEnrollment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Duplet_x_school.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherKabinetAssignment", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("KabinetId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "KabinetId");

                    b.HasIndex("KabinetId");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.ToTable("TeacherKabinetAssignment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherOptSubjectAssignment", b =>
                {
                    b.Property<int>("OptSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("OptSubjectId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherOptSubjectAssignment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherSchoolClassAssignment", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "SchoolClassId");

                    b.HasIndex("SchoolClassId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.ToTable("TeacherSchoolClassAssignment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherSubjectAssignment", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SubjectTeacherAssignment");
                });

            modelBuilder.Entity("Duplet_x_school.Models.Grades", b =>
                {
                    b.HasOne("Duplet_x_school.Models.Student", "Student")
                        .WithMany("StudentGradeses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.SchoolClassKabinetAssignment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.Kabinet", "Kabinet")
                        .WithMany()
                        .HasForeignKey("KabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.SchoolClass", "SchoolClass")
                        .WithOne("SchoolClassKabinetAssignment")
                        .HasForeignKey("Duplet_x_school.Models.SchoolClassKabinetAssignment", "SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.SchoolClassSubjectAssignment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.SchoolClass", "SchoolClass")
                        .WithMany("SchoolClassSubjectAssignments")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.StudentOptSubjectEnrollment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.OptSubject", "OptSubject")
                        .WithMany()
                        .HasForeignKey("OptSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Student", "Student")
                        .WithMany("StudentOptSubjectEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.StudentSchoolClassEnrollment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.SchoolClass", "SchoolClass")
                        .WithMany("StudentSchoolClassEnrollments")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Student", "Student")
                        .WithOne("StudentSchoolClassEnrollment")
                        .HasForeignKey("Duplet_x_school.Models.StudentSchoolClassEnrollment", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherKabinetAssignment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.Kabinet", "Kabinet")
                        .WithMany()
                        .HasForeignKey("KabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Teacher", "Teacher")
                        .WithOne("TeacherKabinetAssignment")
                        .HasForeignKey("Duplet_x_school.Models.TeacherKabinetAssignment", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherOptSubjectAssignment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.OptSubject", "OptSubject")
                        .WithMany()
                        .HasForeignKey("OptSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Teacher", "Teacher")
                        .WithMany("TeacherOptSubjectAssignments")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherSchoolClassAssignment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.SchoolClass", "SchoolClass")
                        .WithOne("TeacherSchoolClassAssignment")
                        .HasForeignKey("Duplet_x_school.Models.TeacherSchoolClassAssignment", "SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Teacher", "Teacher")
                        .WithOne("TeacherSchoolClassAssignment")
                        .HasForeignKey("Duplet_x_school.Models.TeacherSchoolClassAssignment", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duplet_x_school.Models.TeacherSubjectAssignment", b =>
                {
                    b.HasOne("Duplet_x_school.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duplet_x_school.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjectAssignments")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
